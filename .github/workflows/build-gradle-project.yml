#
# Resources
#  - "Build with Gradle" Github Action: https://github.com/inversion-api/inversion-engine/new/main?filename=.github%2Fworkflows%2Fgradle.yml&workflow_template=ci%2Fgradle
#  - "Executing Gradle builds on GitHub Actions" doco on Gradle.org: https://docs.gradle.org/current/userguide/github-actions.html
#  - "How to Sign and Release to The Central Repository with GitHub Actions" : https://gist.github.com/sualeh/ae78dc16123899d7942bc38baba5203c
#  - "Gradle Build Action" : https://github.com/marketplace/actions/gradle-build-action

name: Build Gradle project

on:
  push:
    branches: [ "main", "release-*"]
#  pull_request:
#    branches: [ "main", "release-*"]

jobs:
  build-gradle-project:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Execute Gradle build
        run: ./gradlew build
      - name: Publish to Sonotype and OSSRH
        run: |
          gpg --keyring secring.gpg --export-secret-keys > ~/.gnupg/secring.gpg
          gpg --list-secret-keys --keyid-format LONG
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          ls -la /home/runner/.gnupg/
          
          cat <(echo -e "${{ secrets.SONOTYPE_LOGIN }}") >> gradle.properties
          ./gradlew --stacktrace publishToSonatype closeAndReleaseSonatypeStagingRepository

#        if: ${{github.event_name == 'push' && startsWith(github.ref, 'release-')}}
#          ./gradlew --stacktrace -DsonatypeUsername=$SONATYPE_USERNAME -DsonatypePassword=$SONATYPE_PASSWORD publishToSonatype closeAndReleaseSonatypeStagingRepository

#        run: |
#          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
#         gpg --list-secret-keys --keyid-format LONG  #uncomment this to verify in the action output that the cert installed correctly
#          ./gradlew --stacktrace -DsontypeUsername=$SONATYPE_USERNAME -DsonatypePassword=$SONATYPE_PASSWORD publishToSonatype closeAndReleaseSonatypeStagingRepository

#      - name: Publish to Sonotype / OSSRH
#        env:
#          SONATYPE_USERNAME: ${{ secrets.$SONATYPE_USERNAME }}
#          SONATYPE_PASSWORD: ${{ secrets.$SONATYPE_PASSWORD }}
#        if: ${{github.event_name == 'push' && contains(github.ref, 'release')}}
#        run:
